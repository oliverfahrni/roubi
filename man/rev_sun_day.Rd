% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rob_rev_sun_day.R
\name{rev_sun_day}
\alias{rev_sun_day}
\title{rev_sun_day}
\usage{
rev_sun_day(location, day_of_year, ray_length, ray_intervals, zoom_level)
}
\arguments{
\item{day_of_year}{is the # of day in the year, 1 = 1. January,}

\item{ray_length}{is radius of interest, arbitrary 10km (m)}

\item{ray_intervals}{is the distance between point on one ray to check, arbitrary 100m (m)}

\item{zoom_level}{is the accuracy of the raster to get elevation from a point. 15 is the highest but it is very slow.}

\item{location:}{need to be a vector = c(long, lat) according to WGS 84,}
}
\value{
tbl_sun_shadow is a tibble
}
\description{
The ouput of the function is a tibble given the suns every minute position and if there is direct sunlight (obstructed by mountains/hills). Currently does not work on arm because of elevatr which uses sf.
}
\examples{
Example on how to graph the retrieved data
data <- rev_sun_day(c(7.629984, 46.378672), 180, 1000, 10, 12)
hour_major <- as_tibble(seq(1:11))
time_hour_major <- c(hms::as.hms(hour_major$value*60*60*2))

hour_minor <- as_tibble(seq(1:24))
time_hour_minor <- c(hms::as.hms(hour_minor$value*60*60))
data \%>\% filter(alpha > 0) \%>\%
ggplot() +
geom_line(aes(x = time, y = sun_in_min), size = 2) +
geom_line(aes(x = time, y = alpha/30), size = 2, color = "red") +
labs(title = "Tagesverlauf der Sonne in Leukerbad Therme am 3. Januar", x = "Uhrzeit (Winterzeit)", y = "Schatten  -  Sonne (schwarz)") +
 theme_minimal() +
 scale_x_time(breaks = time_hour_major,
 minor_breaks = time_hour_minor,
 limits = c(min(time_hour_minor), max(time_hour_minor))) +
 scale_y_continuous(sec.axis = sec_axis(~ . *30, name = "Alpha (rot)"))
}
